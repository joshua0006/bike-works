rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Allow users to read and write to their own data
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow only admins to create bikes, while maintaining existing read permissions
    match /bikes/{bikeId} {
      allow create: if request.auth != null && isAdmin();
      // Allow any authenticated user to read bikes with 'available' status
      allow read: if request.auth != null && (
        resource.data.status == 'available' || 
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Allow users to read and write to their own jobs
    match /jobs/{jobId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
  }
} 